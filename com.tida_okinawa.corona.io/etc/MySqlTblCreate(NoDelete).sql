SET SESSION FOREIGN_KEY_CHECKS=0;


/* Create Tables */

-- 分野辞書の分野を定義するテーブル
CREATE TABLE CATEGORY
(
	ID INT NOT NULL AUTO_INCREMENT,
	NAME VARCHAR(40) NOT NULL UNIQUE,
	PRIMARY KEY (ID)
) COMMENT = '分野辞書の分野を定義するテーブル';


-- 問い合わせデータ
CREATE TABLE CLAIMS
(
	ID INT NOT NULL AUTO_INCREMENT,
	WORK_TBL_ID INT,
	KEY_FLD_ID INT,
	PRODUCT_FLD_ID INT,
	TGT_FLDS TEXT,
	EXTERNAL_FLG BOOLEAN,
	INTERNAL_FLG BOOLEAN,
	PRIMARY KEY (ID)
) COMMENT = '問い合わせデータ';


CREATE TABLE CORONA_DBVERSION
(
	-- Coronaデータベースバージョン管理
	VERSION VARCHAR(10) NOT NULL COMMENT 'Coronaデータベースバージョン管理'
);


-- 用語を管理するテーブル
CREATE TABLE DIC_COMMON
(
	ITEM_ID INT NOT NULL AUTO_INCREMENT,
	NAME VARCHAR(255) NOT NULL,
	READING VARCHAR(255) NOT NULL,
	PART_ID INT NOT NULL,
	CLASS_ID INT,
	CFORM_ID INT,
	DIC_ID INT NOT NULL,
	INACTIVE BOOLEAN,
	JUMAN_BASE VARCHAR(4096),
	PRIMARY KEY (ITEM_ID)
) COMMENT = '用語を管理するテーブル';


-- ゆらぎ情報を管理するテーブル
CREATE TABLE DIC_FLUC
(
	FLUC_ID INT NOT NULL AUTO_INCREMENT,
	DIC_ID INT NOT NULL,
	ITEM_ID INT NOT NULL,
	INACTIVE BOOLEAN,
	PRIMARY KEY (FLUC_ID)
) COMMENT = 'ゆらぎ情報を管理するテーブル';


-- ラベル情報を管理するテーブル
CREATE TABLE DIC_LABEL
(
	LABEL_ID INT NOT NULL AUTO_INCREMENT,
	DIC_ID INT NOT NULL,
	LABEL_NAME VARCHAR(40),
	INACTIVE BOOLEAN,
	PRIMARY KEY (LABEL_ID)
) COMMENT = 'ラベル情報を管理するテーブル';


-- パターン情報を保持するテーブル
CREATE TABLE DIC_PATTERN
(
	ID INT NOT NULL AUTO_INCREMENT,
	DIC_ID INT NOT NULL,
	NAME VARCHAR(80),
	PATTERN TEXT,
	TYPE_ID INT NOT NULL,
	PARTS BOOLEAN NOT NULL,
	INACTIVE BOOLEAN,
	PRIMARY KEY (ID)
) COMMENT = 'パターン情報を保持するテーブル';


-- フィールドに対する辞書の優先度を保持するテーブル
CREATE TABLE DIC_PRI
(
	ID INT NOT NULL,
	FLD_ID INT NOT NULL,
	DIC_ID INT NOT NULL,
	PRIORITY INT,
	INACTIVE BOOLEAN,
	PRIMARY KEY (ID, FLD_ID, DIC_ID)
) COMMENT = 'フィールドに対する辞書の優先度を保持するテーブル';


-- 同義語情報を管理するテーブル
CREATE TABLE DIC_SYNONYM
(
	SYNONYM_ID INT NOT NULL AUTO_INCREMENT,
	DIC_ID INT NOT NULL,
	ITEM_ID INT NOT NULL,
	INACTIVE BOOLEAN,
	PRIMARY KEY (SYNONYM_ID)
) COMMENT = '同義語情報を管理するテーブル';


-- 辞書に登録するのは用語辞書（一般、専門など）、ゆらぎ辞書、同義語辞書、ラベル辞書、共起辞書などそれぞれの辞書を管理する
CREATE TABLE DIC_TABLE
(
	DIC_ID INT NOT NULL AUTO_INCREMENT,
	PARENT_ID VARCHAR(256) DEFAULT '-1',
	DIC_NAME VARCHAR(255) NOT NULL,
	DIC_FILE_NAME VARCHAR(255) NOT NULL,
	DIC_TYPE INT NOT NULL,
	CATEGORY_ID INT,
	DATE DATETIME,
	INACTIVE BOOLEAN,
	CREATION_TIME DATETIME,
	PRIMARY KEY (DIC_ID)
) COMMENT = '辞書に登録するのは用語辞書（一般、専門など）、ゆらぎ辞書、同義語辞書、ラベル辞書、共起辞書などそれぞれの辞書を管理する';


-- フィールド情報を管理するテーブル
CREATE TABLE FIELDS
(
	ID INT NOT NULL AUTO_INCREMENT,
	TBL_ID INT NOT NULL,
	FLD_ID INT,
	NAME VARCHAR(256),
	DBNAME VARCHAR(128),
	PRIMARY KEY (ID)
) COMMENT = 'フィールド情報を管理するテーブル';


-- 辞書と用語の紐づけを管理するテーブル(ゆらぎ)
CREATE TABLE FLUC_TBL
(
	ID INT NOT NULL AUTO_INCREMENT,
	DIC_ID INT NOT NULL,
	ITEM_ID INT NOT NULL,
	INACTIVE BOOLEAN,
	PRIMARY KEY (ID)
) COMMENT = '辞書と用語の紐づけを管理するテーブル(ゆらぎ)';


-- ラベルの親子関係を管理するテーブル
CREATE TABLE LABEL_TREE
(
	PARENT_ID INT NOT NULL,
	CHILD_ID INT NOT NULL,
	PRIMARY KEY (PARENT_ID, CHILD_ID)
) COMMENT = 'ラベルの親子関係を管理するテーブル';


-- ターゲットを管理するテーブル
CREATE TABLE PRODUCT
(
	PRODUCT_ID INT NOT NULL AUTO_INCREMENT,
	PRODUCT_NAME VARCHAR(100) NOT NULL UNIQUE,
	PRIMARY KEY (PRODUCT_ID)
) COMMENT = 'ターゲットを管理するテーブル';


-- プロジェクトに対する情報を管理するテーブル
CREATE TABLE PROJECT
(
	PROJECT_ID INT NOT NULL AUTO_INCREMENT,
	PROJECT_NAME VARCHAR(80) NOT NULL UNIQUE,
	GUID VARCHAR(0),
	KNP_CONFIG INT DEFAULT 0 NOT NULL,
	PRIMARY KEY (PROJECT_ID)
) COMMENT = 'プロジェクトに対する情報を管理するテーブル';


-- マイニング結果を出力するためのテーブル情報を管理するテーブル
CREATE TABLE REL_CLM_PRODUCT
(
	PRJ_ID INT NOT NULL,
	PRODUCT_ID INT NOT NULL,
	TBL_ID INT NOT NULL,
	WORK_TBL_ID INT,
	REL_TBL_ID INT,
	TGT_FLDS TEXT,
	PRIMARY KEY (PRJ_ID, PRODUCT_ID, TBL_ID)
) COMMENT = 'マイニング結果を出力するためのテーブル情報を管理するテーブル';


-- 辞書と用語、ラベルの紐付けを管理するテーブル
CREATE TABLE REL_COMMON_LABEL
(
	REL_LABEL_ID INT NOT NULL AUTO_INCREMENT,
	LABEL_ID INT NOT NULL,
	DIC_ID INT NOT NULL,
	ITEM_ID INT NOT NULL,
	VALUE INT,
	MATH_FLG BOOLEAN,
	PRIMARY KEY (REL_LABEL_ID)
) COMMENT = '辞書と用語、ラベルの紐付けを管理するテーブル';


-- ゆらぎ情報とゆらぎテーブルの紐付けを管理するテーブル
CREATE TABLE REL_FLUC
(
	ID INT NOT NULL,
	FLUC_ID INT NOT NULL,
	STATUS INT,
	PRIMARY KEY (ID, FLUC_ID)
) COMMENT = 'ゆらぎ情報とゆらぎテーブルの紐付けを管理するテーブル';


-- プロジェクトに属するターゲットをどの問い合わせを使ってマイニングするのかを定義するテーブル
CREATE TABLE REL_PRJ_CLM
(
	PRJ_ID INT NOT NULL,
	TBL_ID INT NOT NULL,
	PRIMARY KEY (PRJ_ID, TBL_ID)
) COMMENT = 'プロジェクトに属するターゲットをどの問い合わせを使ってマイニングするのかを定義するテーブル';


-- プロジェクト単位で指定する辞書を管理するテーブル
CREATE TABLE REL_PRJ_DIC
(
	PROJECT_ID INT NOT NULL,
	DIC_ID INT NOT NULL,
	PRIMARY KEY (PROJECT_ID, DIC_ID)
) COMMENT = 'プロジェクト単位で指定する辞書を管理するテーブル';


-- プロジェクトとターゲットを紐づけるテーブル
CREATE TABLE REL_PRJ_PRODUCT
(
	PROJECT_ID INT NOT NULL,
	PRODUCT_ID INT NOT NULL,
	PRIMARY KEY (PROJECT_ID, PRODUCT_ID)
) COMMENT = 'プロジェクトとターゲットを紐づけるテーブル';


-- ターゲット単位で指定する辞書を管理するテーブル
CREATE TABLE REL_PRODUCT_DIC
(
	DIC_ID INT NOT NULL,
	PRODUCT_ID INT NOT NULL,
	PRIMARY KEY (DIC_ID, PRODUCT_ID)
) COMMENT = 'ターゲット単位で指定する辞書を管理するテーブル';


-- 同義語情報と同義語テーブルの紐付けを管理するテーブル
CREATE TABLE REL_SYNONYM
(
	ID INT NOT NULL,
	SYNONYM_ID INT NOT NULL,
	STATUS INT,
	PRIMARY KEY (ID, SYNONYM_ID)
) COMMENT = '同義語情報と同義語テーブルの紐付けを管理するテーブル';


-- 辞書と用語の紐づけを管理するテーブル(同義語)
CREATE TABLE SYNONYM_TBL
(
	ID INT NOT NULL AUTO_INCREMENT,
	DIC_ID INT NOT NULL,
	ITEM_ID INT NOT NULL,
	INACTIVE BOOLEAN,
	PRIMARY KEY (ID)
) COMMENT = '辞書と用語の紐づけを管理するテーブル(同義語)';


-- 種別に対応するDB名や取り込データの情報を保持するテーブル
CREATE TABLE TABLES
(
	ID INT NOT NULL AUTO_INCREMENT,
	NAME VARCHAR(255) NOT NULL,
	-- TYPEに対応するテーブル名を保持する
	DBNAME VARCHAR(255) NOT NULL COMMENT 'TYPEに対応するテーブル名を保持する',
	TYPE INT NOT NULL,
	COMMENT VARCHAR(255),
	LASTED DATETIME,
	PRIMARY KEY (ID)
) COMMENT = '種別に対応するDB名や取り込データの情報を保持するテーブル';


CREATE TABLE TEMPLATE_PATTERN
(
	ID INT(0) NOT NULL AUTO_INCREMENT,
	TEMPLATE_ID INT NOT NULL,
	NAME VARCHAR(80),
	TEMPLATE TEXT,
	TYPE_ID INT NOT NULL,
	PARTS BOOLEAN NOT NULL,
	INACTIVE BOOLEAN,
	PRIMARY KEY (ID)
);


-- パターン分類を管理するテーブル
CREATE TABLE TYPE_PATTERN
(
	ID INT NOT NULL AUTO_INCREMENT,
	NAME VARCHAR(20) NOT NULL UNIQUE,
	PRIMARY KEY (ID)
) COMMENT = 'パターン分類を管理するテーブル';


-- クレンジング情報を管理するテーブル
CREATE TABLE WORKDATAS
(
	ID INT NOT NULL AUTO_INCREMENT,
	PROJECT_ID INT,
	PRODUCT_ID INT,
	INPUT_TABLE_ID INT NOT NULL,
	TYPE INT,
	HISTORY_ID INT,
	FORMER_HISTORY_ID INT,
	LINK VARCHAR(255),
	LASTED DATETIME,
	PRIMARY KEY (ID)
) COMMENT = 'クレンジング情報を管理するテーブル';



/* Create Foreign Keys */

ALTER TABLE DIC_FLUC
	ADD CONSTRAINT DIC_FLUC_IBFK_1 FOREIGN KEY (ITEM_ID)
	REFERENCES DIC_COMMON (ITEM_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE DIC_SYNONYM
	ADD CONSTRAINT DIC_SYNONYM_IBFK_1 FOREIGN KEY (ITEM_ID)
	REFERENCES DIC_COMMON (ITEM_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE FLUC_TBL
	ADD CONSTRAINT FLUC_TBL_IBFK_1 FOREIGN KEY (ITEM_ID)
	REFERENCES DIC_COMMON (ITEM_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE REL_COMMON_LABEL
	ADD CONSTRAINT REL_COMMON_LABEL_IBFK_1 FOREIGN KEY (ITEM_ID)
	REFERENCES DIC_COMMON (ITEM_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE SYNONYM_TBL
	ADD CONSTRAINT SYNONYM_TBL_IBFK_1 FOREIGN KEY (ITEM_ID)
	REFERENCES DIC_COMMON (ITEM_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE REL_FLUC
	ADD CONSTRAINT REL_FLUC_IBFK_1 FOREIGN KEY (FLUC_ID)
	REFERENCES DIC_FLUC (FLUC_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE LABEL_TREE
	ADD CONSTRAINT LABEL_TREE_IBFK_2 FOREIGN KEY (PARENT_ID)
	REFERENCES DIC_LABEL (LABEL_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE LABEL_TREE
	ADD CONSTRAINT LABEL_TREE_IBFK_1 FOREIGN KEY (CHILD_ID)
	REFERENCES DIC_LABEL (LABEL_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE REL_COMMON_LABEL
	ADD CONSTRAINT REL_COMMON_LABEL_IBFK_2 FOREIGN KEY (LABEL_ID)
	REFERENCES DIC_LABEL (LABEL_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE REL_SYNONYM
	ADD CONSTRAINT REL_SYNONYM_IBFK_1 FOREIGN KEY (SYNONYM_ID)
	REFERENCES DIC_SYNONYM (SYNONYM_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE DIC_COMMON
	ADD CONSTRAINT DIC_COMMON_IBFK_1 FOREIGN KEY (DIC_ID)
	REFERENCES DIC_TABLE (DIC_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE DIC_FLUC
	ADD CONSTRAINT DIC_FLUC_IBFK_2 FOREIGN KEY (DIC_ID)
	REFERENCES DIC_TABLE (DIC_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE DIC_LABEL
	ADD CONSTRAINT DIC_LABEL_IBFK_1 FOREIGN KEY (DIC_ID)
	REFERENCES DIC_TABLE (DIC_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE DIC_PATTERN
	ADD CONSTRAINT DIC_PATTERN_IBFK_1 FOREIGN KEY (DIC_ID)
	REFERENCES DIC_TABLE (DIC_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE DIC_SYNONYM
	ADD CONSTRAINT DIC_SYNONYM_IBFK_2 FOREIGN KEY (DIC_ID)
	REFERENCES DIC_TABLE (DIC_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE FLUC_TBL
	ADD CONSTRAINT FLUC_TBL_IBFK_2 FOREIGN KEY (DIC_ID)
	REFERENCES DIC_TABLE (DIC_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE REL_COMMON_LABEL
	ADD CONSTRAINT REL_COMMON_LABEL_IBFK_3 FOREIGN KEY (DIC_ID)
	REFERENCES DIC_TABLE (DIC_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE REL_PRJ_DIC
	ADD CONSTRAINT REL_PRJ_DIC_IBFK_1 FOREIGN KEY (DIC_ID)
	REFERENCES DIC_TABLE (DIC_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE REL_PRODUCT_DIC
	ADD CONSTRAINT REL_PRODUCT_DIC_IBFK_1 FOREIGN KEY (DIC_ID)
	REFERENCES DIC_TABLE (DIC_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE SYNONYM_TBL
	ADD CONSTRAINT SYNONYM_TBL_IBFK_2 FOREIGN KEY (DIC_ID)
	REFERENCES DIC_TABLE (DIC_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE REL_FLUC
	ADD CONSTRAINT REL_FLUC_IBFK_2 FOREIGN KEY (ID)
	REFERENCES FLUC_TBL (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE REL_CLM_PRODUCT
	ADD CONSTRAINT REL_CLM_PRODUCT_IBFK_1 FOREIGN KEY (PRODUCT_ID)
	REFERENCES PRODUCT (PRODUCT_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE REL_PRJ_PRODUCT
	ADD FOREIGN KEY (PRODUCT_ID)
	REFERENCES PRODUCT (PRODUCT_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE REL_PRODUCT_DIC
	ADD CONSTRAINT REL_PRODUCT_DIC_IBFK_2 FOREIGN KEY (PRODUCT_ID)
	REFERENCES PRODUCT (PRODUCT_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE REL_PRJ_CLM
	ADD CONSTRAINT REL_PRJ_CLM_IBFK_1 FOREIGN KEY (PRJ_ID)
	REFERENCES PROJECT (PROJECT_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE REL_PRJ_DIC
	ADD CONSTRAINT REL_PRJ_DIC_IBFK_2 FOREIGN KEY (PROJECT_ID)
	REFERENCES PROJECT (PROJECT_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE REL_PRJ_PRODUCT
	ADD CONSTRAINT REL_PRJ_PRODUCT_IBFK_2 FOREIGN KEY (PROJECT_ID)
	REFERENCES PROJECT (PROJECT_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE REL_CLM_PRODUCT
	ADD CONSTRAINT REL_CLM_PRODUCT_IBFK_2 FOREIGN KEY (PRJ_ID, TBL_ID)
	REFERENCES REL_PRJ_CLM (PRJ_ID, TBL_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE REL_SYNONYM
	ADD CONSTRAINT REL_SYNONYM_IBFK_2 FOREIGN KEY (ID)
	REFERENCES SYNONYM_TBL (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE CLAIMS
	ADD CONSTRAINT CLAIMS_IBFK_1 FOREIGN KEY (ID)
	REFERENCES TABLES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE FIELDS
	ADD CONSTRAINT FIELDS_IBFK_1 FOREIGN KEY (TBL_ID)
	REFERENCES TABLES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE REL_PRJ_CLM
	ADD CONSTRAINT REL_PRJ_CLM_IBFK_2 FOREIGN KEY (TBL_ID)
	REFERENCES TABLES (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE DIC_PRI
	ADD CONSTRAINT DIC_PRI_IBFK_1 FOREIGN KEY (ID)
	REFERENCES WORKDATAS (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;



/* Create Indexes */

CREATE INDEX DIC_ID USING BTREE ON DIC_COMMON (DIC_ID ASC);
CREATE INDEX ITEM_ID USING BTREE ON DIC_FLUC (ITEM_ID ASC);
CREATE INDEX DIC_ID USING BTREE ON DIC_FLUC (DIC_ID ASC);
CREATE INDEX DIC_ID USING BTREE ON DIC_LABEL (DIC_ID ASC);
CREATE INDEX DIC_ID USING BTREE ON DIC_PATTERN (DIC_ID ASC);
CREATE INDEX ITEM_ID USING BTREE ON DIC_SYNONYM (ITEM_ID ASC);
CREATE INDEX DIC_ID USING BTREE ON DIC_SYNONYM (DIC_ID ASC);
CREATE INDEX CATEGORY_ID USING BTREE ON DIC_TABLE (CATEGORY_ID ASC);
CREATE INDEX TBL_ID USING BTREE ON FIELDS (TBL_ID ASC);
CREATE INDEX ITEM_ID USING BTREE ON FLUC_TBL (ITEM_ID ASC);
CREATE INDEX DIC_ID USING BTREE ON FLUC_TBL (DIC_ID ASC);
CREATE INDEX CHILD_ID USING BTREE ON LABEL_TREE (CHILD_ID ASC);
CREATE INDEX PRODUCT_ID USING BTREE ON REL_CLM_PRODUCT (PRODUCT_ID ASC);
CREATE INDEX PRJ_ID USING BTREE ON REL_CLM_PRODUCT (PRJ_ID ASC, TBL_ID ASC);
CREATE INDEX ITEM_ID USING BTREE ON REL_COMMON_LABEL (ITEM_ID ASC);
CREATE INDEX LABEL_ID USING BTREE ON REL_COMMON_LABEL (LABEL_ID ASC);
CREATE INDEX DIC_ID USING BTREE ON REL_COMMON_LABEL (DIC_ID ASC);
CREATE INDEX FLUC_ID USING BTREE ON REL_FLUC (FLUC_ID ASC);
CREATE INDEX TBL_ID USING BTREE ON REL_PRJ_CLM (TBL_ID ASC);
CREATE INDEX DIC_ID USING BTREE ON REL_PRJ_DIC (DIC_ID ASC);
CREATE INDEX DIC_ID USING BTREE ON REL_PRODUCT_DIC (DIC_ID ASC);
CREATE INDEX SYNONYM_ID USING BTREE ON REL_SYNONYM (SYNONYM_ID ASC);
CREATE INDEX ITEM_ID USING BTREE ON SYNONYM_TBL (ITEM_ID ASC);
CREATE INDEX DIC_ID USING BTREE ON SYNONYM_TBL (DIC_ID ASC);



